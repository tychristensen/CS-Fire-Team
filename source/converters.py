import sys
import pandas as pd
import lxml
from source import dbconnect
import json

#This module takes in the report file generated by iamresponding, and inserts all the shifts into the database.
#The file generated by iamresponding is a bit of a pain.  My best guess is that it's an HTML table, but the file extention is totally wrong.  Whatever the case, pandas seems to handle it just fine.
def convert_iar(file, deleteBeforeAddition=False, timeRangeStart=None, timeRangeEnd=None):
  
  db = dbconnect.dbconnect()

  #This converts the weird html file to a dataframe.
  shifts = pd.read_excel(file, header=1)
  #This contains the info for every shift that failed to load because the person id couldn't be found in the database.
  failures = []
  
  #If the user checked the corrections box, removes all entries from that time frame before reinserting.
  if(deleteBeforeAddition):
    db.delete_shift_range(timeRangeStart, timeRangeEnd)
  
  #Reads through the dataframe row by row.  Makes changes to some formatting, checks if shift already exists.  If it does not, inserts it.
  for i in range(0, shifts.size):
    if(shifts.at[i, 'Last name'] == 'Name'):
      break
    tstart = shifts.at[i, 'Start date'].date().isoformat() + ' ' + shifts.at[i, 'Start time'].isoformat()
    tend = shifts.at[i, 'End date'].date().isoformat() + ' ' + shifts.at[i, 'End time'].isoformat()
    location = shifts.at[i, 'On duty at']
    bonus = shifts.at[i, 'On duty for']

    person = shifts.at[i, 'First name'].split(' ')[0]
    
    sft = db.get_shift(person, tstart, tend)

    if(not sft):
      if(not db.get_person_id(person)):
        failures.append([person, tstart, tend])
      else:
        db.load_shift(tstart, tend, location, person, bonus)
    elif (sft[0][4] != bonus):
      db.update_bonus(tstart, tend, person, bonus)
      
  return failures
